{"version":3,"sources":["About.js","Table.js","Form.js","App.js","index.js"],"names":["About","href","target","Component","TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,E,4JACF,WACI,OACI,qCACI,oDACA,iDAAmB,mBAAGC,KAAK,6BAA6BC,OAAO,SAA5C,sBAAnB,OACA,kCACI,6FAA+D,mBAAGD,KAAK,0DAA0DC,OAAO,SAAzE,0BAA/D,8d,GAPAC,aAcLH,ICbTI,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MASjB,OAAO,gCAAQJ,KAiBJS,EAXD,SAACV,GACX,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCrChEE,E,4MACFC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACZ,MAAwBA,EAAMnB,OAAtBU,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKX,EAAOU,K,EAIhBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKN,OAC7B,EAAKI,SAAS,EAAKL,e,4CAGvB,WACI,MAAsBQ,KAAKP,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACI,iCACI,uBAAOc,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLhB,KAAK,OACLiB,GAAG,OACHP,MAAOV,EACPkB,SAAUJ,KAAKN,eACnB,uBAAOO,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLhB,KAAK,MACLiB,GAAG,MACHP,MAAOT,EACPiB,SAAUJ,KAAKN,eACnB,uBAAOQ,KAAK,SAASN,MAAM,SAASR,QAASY,KAAKF,oB,GAxC/CrB,aA8CJc,IC3CTc,E,4MACFZ,MAAQ,CACJa,WAAY,I,EAGhBjB,gBAAkB,SAACJ,GACf,IAAQqB,EAAe,EAAKb,MAApBa,WAER,EAAKT,SAAS,CACVS,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMxB,Q,EAKzBc,aAAe,SAACS,GACZ,EAAKX,SAAS,CAAES,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,4CAG3D,WACI,IAAQF,EAAeN,KAAKP,MAApBa,WAER,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAO5B,cAAewB,EAAYjB,gBAAiBW,KAAKX,kBACxD,cAAC,EAAD,CAAMU,aAAcC,KAAKD,sB,GA1BvBtB,aAgCH4B,I,MChCfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d523e0ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <>\n                <h1>My First React App</h1>\n                <p>By Justin Pong (<a href=\"https://github.com/jpwaves\" target=\"_blank\">@jpwaves</a>)</p>\n                <section>\n                    <p>This app comes from a step-by-step tutorial I followed from <a href=\"https://www.taniarascia.com/getting-started-with-react/\" target=\"_blank\">Tania Rascia</a>. The app can perform almost all CRUD functions (can't update data) and demonstrates this functionality with a simple table that you can add data to about a person and their corresponding job. The table initalizes with no data, and data can be added by filling in the name and job text input boxes; if you want to change this and have initial data in the table, you would need to modify the state of the Table component to have starting data as part of its state.</p>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\n// simple components: funcs that return JSX\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    });\n    return <tbody>{rows}</tbody>;\n}\n\n// class components: classes with a render method and the render method returns JSX\n// note: it is generally best practice to have components that require having states\n// be class components and all other components be simple components.\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props;\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    );\n}\n\nexport default Table;","import React, { Component } from 'react';\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n    }\n\n    state = this.initialState\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { name, job } = this.state;\n\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport About from './About';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: [],\n    }\n\n    removeCharacter = (index) => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            }),\n        });\n    }\n\n    handleSubmit = (character) => {\n        this.setState({ characters: [...this.state.characters, character] });\n    }\n\n    render() {\n        const { characters } = this.state;\n\n        return (\n            <div className=\"container\">\n                <About />\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}